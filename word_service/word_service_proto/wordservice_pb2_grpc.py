# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import wordservice_pb2 as wordservice__pb2


class WordServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.DefineWord = channel.unary_unary(
                '/endpoints.word_service.WordService/DefineWord',
                request_serializer=wordservice__pb2.DefineWordRequest.SerializeToString,
                response_deserializer=wordservice__pb2.DefineWordResponse.FromString,
                )
        self.WordFromDefinition = channel.unary_unary(
                '/endpoints.word_service.WordService/WordFromDefinition',
                request_serializer=wordservice__pb2.WordFromDefinitionRequest.SerializeToString,
                response_deserializer=wordservice__pb2.WordFromDefinitionResponse.FromString,
                )
        self.GenerateWord = channel.unary_unary(
                '/endpoints.word_service.WordService/GenerateWord',
                request_serializer=wordservice__pb2.GenerateWordRequest.SerializeToString,
                response_deserializer=wordservice__pb2.GenerateWordResponse.FromString,
                )


class WordServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def DefineWord(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WordFromDefinition(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GenerateWord(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_WordServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'DefineWord': grpc.unary_unary_rpc_method_handler(
                    servicer.DefineWord,
                    request_deserializer=wordservice__pb2.DefineWordRequest.FromString,
                    response_serializer=wordservice__pb2.DefineWordResponse.SerializeToString,
            ),
            'WordFromDefinition': grpc.unary_unary_rpc_method_handler(
                    servicer.WordFromDefinition,
                    request_deserializer=wordservice__pb2.WordFromDefinitionRequest.FromString,
                    response_serializer=wordservice__pb2.WordFromDefinitionResponse.SerializeToString,
            ),
            'GenerateWord': grpc.unary_unary_rpc_method_handler(
                    servicer.GenerateWord,
                    request_deserializer=wordservice__pb2.GenerateWordRequest.FromString,
                    response_serializer=wordservice__pb2.GenerateWordResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'endpoints.word_service.WordService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class WordService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def DefineWord(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/endpoints.word_service.WordService/DefineWord',
            wordservice__pb2.DefineWordRequest.SerializeToString,
            wordservice__pb2.DefineWordResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WordFromDefinition(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/endpoints.word_service.WordService/WordFromDefinition',
            wordservice__pb2.WordFromDefinitionRequest.SerializeToString,
            wordservice__pb2.WordFromDefinitionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GenerateWord(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/endpoints.word_service.WordService/GenerateWord',
            wordservice__pb2.GenerateWordRequest.SerializeToString,
            wordservice__pb2.GenerateWordResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
